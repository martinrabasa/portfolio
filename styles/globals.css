@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --hamburger-gap: 7px;
  --hamburger-width: 22px;
  --hamburger-box-height: 14px;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  scroll-behavior: smooth;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* Hamburguer menu */

.hamburger {
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  overflow: visible;
}

.hamburger_box {
  width: var(--hamburger-width);
  height: var(--hamburger-box-height);
  display: inline-block;
  position: relative;
}

.hamburger_inner {
  display: block;
  top: 50%;
}

.hamburger_inner,
.hamburger_inner::before,
.hamburger_inner::after {
  width: var(--hamburger-width);
  height: 2px;
  border-radius: 2px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}

.hamburger_inner::before,
.hamburger_inner::after {
  content: "";
  display: block;
}

.hamburger_inner::before {
  top: calc(var(--hamburger-gap) * -1);
}

.hamburger_inner::after {
  bottom: calc(var(--hamburger-gap) * -1);
}

/* 3dy */

.hamburger__3dy .hamburger_box {
  perspective: 80px;
}

.hamburger__3dy .hamburger_inner {
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger__3dy .hamburger_inner::before,
.hamburger__3dy .hamburger_inner::after {
  transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.hamburger__3dy.is_active .hamburger_inner {
  background-color: transparent !important;
  transform: rotateX(-180deg);
}

.hamburger__3dy.is_active .hamburger_inner::before {
  transform: translate3d(0, var(--hamburger-gap), 0) rotate(45deg);
}

.hamburger__3dy.is_active .hamburger_inner::after {
  transform: translate3d(0, calc(var(--hamburger-gap) * -1), 0) rotate(-45deg);
}

/* shorter line */

/* .hamburger.is_active .hamburger_inner::before {
  width: var(--hamburger-width);
  margin-left: 0px;
}

.hamburger_inner::before {
  width: calc(var(--hamburger-width) - 4px);
  margin-left: 4px;
} */